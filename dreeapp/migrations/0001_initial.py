# Generated by Django 3.2.7 on 2021-09-21 13:36

import ckeditor_uploader.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Blank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_media_url', models.URLField()),
                ('payment_type', models.IntegerField(choices=[(1, 'Click'), (2, 'Payme'), (3, 'Apelsin')], null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('phone', models.CharField(default='', max_length=30)),
                ('email', models.EmailField(default='', max_length=254)),
                ('text', models.TextField(default='', max_length=1000)),
                ('created_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
            ],
        ),
        migrations.CreateModel(
            name='Footer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=18, verbose_name='phone')),
                ('mail', models.EmailField(max_length=32)),
                ('full_address', models.CharField(max_length=255, verbose_name='full_address')),
                ('copyright', models.CharField(max_length=256, verbose_name='copyright')),
                ('address_link', models.URLField(blank=True, null=True)),
                ('youtube', models.URLField(blank=True, max_length=64, null=True)),
                ('facebook', models.URLField(blank=True, max_length=64, null=True)),
                ('telegram', models.URLField(blank=True, max_length=64, null=True)),
                ('instagram', models.URLField(blank=True, max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Index',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s1_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='s1_title')),
                ('s1_description', models.CharField(blank=True, max_length=200, null=True, verbose_name='s1_description')),
                ('s1_btn_text', models.CharField(blank=True, max_length=16, null=True, verbose_name='s1_btn_text')),
                ('s1_image', models.ImageField(blank=True, null=True, upload_to='index')),
                ('s1_slug', models.SlugField(blank=True, max_length=250, null=True, unique=True)),
                ('s2_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='s2_title')),
                ('s2_description', models.CharField(blank=True, max_length=200, null=True, verbose_name='s2_description')),
                ('s2_btn_text', models.CharField(blank=True, max_length=16, null=True, verbose_name='s2_btn_text')),
                ('s2_image', models.ImageField(blank=True, null=True, upload_to='index')),
                ('s2_slug', models.SlugField(blank=True, max_length=250, null=True, unique=True)),
                ('s3_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='s3_title')),
                ('s3_description', models.CharField(blank=True, max_length=200, null=True, verbose_name='s3_description')),
                ('s3_btn_text', models.CharField(blank=True, max_length=16, null=True, verbose_name='s3_btn_text')),
                ('s3_image', models.ImageField(blank=True, null=True, upload_to='index')),
                ('s3_slug', models.SlugField(blank=True, max_length=250, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='LeganEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('image', models.ImageField(upload_to='legal')),
                ('hover_image', models.ImageField(upload_to='hover-legal')),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='title')),
                ('slug', models.CharField(blank=True, default='', max_length=64, unique=True)),
                ('footer', models.BooleanField(default=True, verbose_name='footerga qoyish')),
                ('header', models.BooleanField(default=True, verbose_name='headerda qoyish')),
            ],
        ),
        migrations.CreateModel(
            name='MostPlanted',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'Instagram'), (2, 'Facebook'), (3, 'Twitter'), (4, 'Telegram')], default=1)),
                ('account_link', models.URLField()),
                ('name', models.CharField(default='insta_name', max_length=100, verbose_name='name')),
                ('image', models.ImageField(upload_to='most_planted')),
                ('username', models.CharField(max_length=50, verbose_name='username')),
                ('tree_amount', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='StaticPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Kontent')),
                ('slug', models.SlugField(max_length=255, verbose_name='slug')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Static page',
                'verbose_name_plural': 'Static pages',
            },
        ),
        migrations.CreateModel(
            name='Tree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('price', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='TreeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
            ],
        ),
        migrations.CreateModel(
            name='TreeBlank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('blank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trees', to='dreeapp.blank', verbose_name='blank')),
                ('tree', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dreeapp.tree', verbose_name='tree')),
            ],
        ),
        migrations.AddField(
            model_name='tree',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dreeapp.treetype', verbose_name='tree-type'),
        ),
        migrations.CreateModel(
            name='RegionStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='region')),
                ('donated_trees', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('donated_people', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('planted_trees', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('on_plan_planting', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dreeapp.region', verbose_name='region')),
            ],
        ),
        migrations.CreateModel(
            name='Mahalla',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
                ('district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dreeapp.district', verbose_name='district')),
            ],
        ),
        migrations.AddField(
            model_name='district',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dreeapp.region', verbose_name='region'),
        ),
        migrations.AddField(
            model_name='blank',
            name='district',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dreeapp.district', verbose_name='district'),
        ),
        migrations.AddField(
            model_name='blank',
            name='mahalla',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dreeapp.mahalla', verbose_name='mahalla'),
        ),
        migrations.AddField(
            model_name='blank',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dreeapp.region', verbose_name='region'),
        ),
    ]
